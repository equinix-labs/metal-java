/*
 * Metal API
 * # Introduction Equinix Metal provides a RESTful HTTP API which can be reached at <https://api.equinix.com/metal/v1>. This document describes the API and how to use it.  The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account. Every feature of the Equinix Metal web interface is accessible through the API.  The API docs are generated from the Equinix Metal OpenAPI specification and are officially hosted at <https://metal.equinix.com/developers/api>.  # Common Parameters  The Equinix Metal API uses a few methods to minimize network traffic and improve throughput. These parameters are not used in all API calls, but are used often enough to warrant their own section. Look for these parameters in the documentation for the API calls that support them.  ## Pagination  Pagination is used to limit the number of results returned in a single request. The API will return a maximum of 100 results per page. To retrieve additional results, you can use the `page` and `per_page` query parameters.  The `page` parameter is used to specify the page number. The first page is `1`. The `per_page` parameter is used to specify the number of results per page. The maximum number of results differs by resource type.  ## Sorting  Where offered, the API allows you to sort results by a specific field. To sort results use the `sort_by` query parameter with the root level field name as the value. The `sort_direction` parameter is used to specify the sort direction, either either `asc` (ascending) or `desc` (descending).  ## Filtering  Filtering is used to limit the results returned in a single request. The API supports filtering by certain fields in the response. To filter results, you can use the field as a query parameter.  For example, to filter the IP list to only return public IPv4 addresses, you can filter by the `type` field, as in the following request:  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/projects/id/ips?type=public_ipv4 ```  Only IP addresses with the `type` field set to `public_ipv4` will be returned.  ## Searching  Searching is used to find matching resources using multiple field comparissons. The API supports searching in resources that define this behavior. Currently the search parameter is only available on devices, ssh_keys, api_keys and memberships endpoints.  To search resources you can use the `search` query parameter.  ## Include and Exclude  For resources that contain references to other resources, sucha as a Device that refers to the Project it resides in, the Equinix Metal API will returns `href` values (API links) to the associated resource.  ```json {   ...   \"project\": {     \"href\": \"/metal/v1/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd\"   } } ```  If you're going need the project details, you can avoid a second API request.  Specify the contained `href` resources and collections that you'd like to have included in the response using the `include` query parameter.  For example:  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=projects ```  The `include` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests where `href` resources are presented.  To have multiple resources include, use a comma-separated list (e.g. `?include=emails,projects,memberships`).  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=emails,projects,memberships ```  You may also include nested associations up to three levels deep using dot notation (`?include=memberships.projects`):  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=memberships.projects ```  To exclude resources, and optimize response delivery, use the `exclude` query parameter. The `exclude` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests for fields with nested object responses. When excluded, these fields will be replaced with an object that contains only an `href` field. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.SpotMarketRequestCreateInputInstanceParameters;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.equinix.openapi.JSON;

/**
 * SpotMarketRequestCreateInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpotMarketRequestCreateInput {
  public static final String SERIALIZED_NAME_DEVICES_MAX = "devices_max";
  @SerializedName(SERIALIZED_NAME_DEVICES_MAX)
  private Integer devicesMax;

  public static final String SERIALIZED_NAME_DEVICES_MIN = "devices_min";
  @SerializedName(SERIALIZED_NAME_DEVICES_MIN)
  private Integer devicesMin;

  public static final String SERIALIZED_NAME_END_AT = "end_at";
  @SerializedName(SERIALIZED_NAME_END_AT)
  private OffsetDateTime endAt;

  public static final String SERIALIZED_NAME_FACILITIES = "facilities";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_FACILITIES)
  private List<UUID> facilities;

  public static final String SERIALIZED_NAME_INSTANCE_PARAMETERS = "instance_parameters";
  @SerializedName(SERIALIZED_NAME_INSTANCE_PARAMETERS)
  private SpotMarketRequestCreateInputInstanceParameters instanceParameters;

  public static final String SERIALIZED_NAME_MAX_BID_PRICE = "max_bid_price";
  @SerializedName(SERIALIZED_NAME_MAX_BID_PRICE)
  private Float maxBidPrice;

  public static final String SERIALIZED_NAME_METRO = "metro";
  @SerializedName(SERIALIZED_NAME_METRO)
  private String metro;

  public SpotMarketRequestCreateInput() {
  }

  public SpotMarketRequestCreateInput devicesMax(Integer devicesMax) {
    
    this.devicesMax = devicesMax;
    return this;
  }

   /**
   * Get devicesMax
   * @return devicesMax
  **/
  @javax.annotation.Nullable
  public Integer getDevicesMax() {
    return devicesMax;
  }


  public void setDevicesMax(Integer devicesMax) {
    this.devicesMax = devicesMax;
  }


  public SpotMarketRequestCreateInput devicesMin(Integer devicesMin) {
    
    this.devicesMin = devicesMin;
    return this;
  }

   /**
   * Get devicesMin
   * @return devicesMin
  **/
  @javax.annotation.Nullable
  public Integer getDevicesMin() {
    return devicesMin;
  }


  public void setDevicesMin(Integer devicesMin) {
    this.devicesMin = devicesMin;
  }


  public SpotMarketRequestCreateInput endAt(OffsetDateTime endAt) {
    
    this.endAt = endAt;
    return this;
  }

   /**
   * Get endAt
   * @return endAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndAt() {
    return endAt;
  }


  public void setEndAt(OffsetDateTime endAt) {
    this.endAt = endAt;
  }


  @Deprecated
  public SpotMarketRequestCreateInput facilities(List<UUID> facilities) {
    
    this.facilities = facilities;
    return this;
  }

  public SpotMarketRequestCreateInput addFacilitiesItem(UUID facilitiesItem) {
    if (this.facilities == null) {
      this.facilities = new ArrayList<>();
    }
    this.facilities.add(facilitiesItem);
    return this;
  }

   /**
   * Get facilities
   * @return facilities
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  public List<UUID> getFacilities() {
    return facilities;
  }


  @Deprecated
  public void setFacilities(List<UUID> facilities) {
    this.facilities = facilities;
  }


  public SpotMarketRequestCreateInput instanceParameters(SpotMarketRequestCreateInputInstanceParameters instanceParameters) {
    
    this.instanceParameters = instanceParameters;
    return this;
  }

   /**
   * Get instanceParameters
   * @return instanceParameters
  **/
  @javax.annotation.Nullable
  public SpotMarketRequestCreateInputInstanceParameters getInstanceParameters() {
    return instanceParameters;
  }


  public void setInstanceParameters(SpotMarketRequestCreateInputInstanceParameters instanceParameters) {
    this.instanceParameters = instanceParameters;
  }


  public SpotMarketRequestCreateInput maxBidPrice(Float maxBidPrice) {
    
    this.maxBidPrice = maxBidPrice;
    return this;
  }

   /**
   * Get maxBidPrice
   * @return maxBidPrice
  **/
  @javax.annotation.Nullable
  public Float getMaxBidPrice() {
    return maxBidPrice;
  }


  public void setMaxBidPrice(Float maxBidPrice) {
    this.maxBidPrice = maxBidPrice;
  }


  public SpotMarketRequestCreateInput metro(String metro) {
    
    this.metro = metro;
    return this;
  }

   /**
   * The metro ID or code the spot market request will be created in.
   * @return metro
  **/
  @javax.annotation.Nullable
  public String getMetro() {
    return metro;
  }


  public void setMetro(String metro) {
    this.metro = metro;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SpotMarketRequestCreateInput instance itself
   */
  public SpotMarketRequestCreateInput putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpotMarketRequestCreateInput spotMarketRequestCreateInput = (SpotMarketRequestCreateInput) o;
    return Objects.equals(this.devicesMax, spotMarketRequestCreateInput.devicesMax) &&
        Objects.equals(this.devicesMin, spotMarketRequestCreateInput.devicesMin) &&
        Objects.equals(this.endAt, spotMarketRequestCreateInput.endAt) &&
        Objects.equals(this.facilities, spotMarketRequestCreateInput.facilities) &&
        Objects.equals(this.instanceParameters, spotMarketRequestCreateInput.instanceParameters) &&
        Objects.equals(this.maxBidPrice, spotMarketRequestCreateInput.maxBidPrice) &&
        Objects.equals(this.metro, spotMarketRequestCreateInput.metro)&&
        Objects.equals(this.additionalProperties, spotMarketRequestCreateInput.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(devicesMax, devicesMin, endAt, facilities, instanceParameters, maxBidPrice, metro, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpotMarketRequestCreateInput {\n");
    sb.append("    devicesMax: ").append(toIndentedString(devicesMax)).append("\n");
    sb.append("    devicesMin: ").append(toIndentedString(devicesMin)).append("\n");
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("    facilities: ").append(toIndentedString(facilities)).append("\n");
    sb.append("    instanceParameters: ").append(toIndentedString(instanceParameters)).append("\n");
    sb.append("    maxBidPrice: ").append(toIndentedString(maxBidPrice)).append("\n");
    sb.append("    metro: ").append(toIndentedString(metro)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("devices_max");
    openapiFields.add("devices_min");
    openapiFields.add("end_at");
    openapiFields.add("facilities");
    openapiFields.add("instance_parameters");
    openapiFields.add("max_bid_price");
    openapiFields.add("metro");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SpotMarketRequestCreateInput
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SpotMarketRequestCreateInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpotMarketRequestCreateInput is not found in the empty JSON string", SpotMarketRequestCreateInput.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("facilities") != null && !jsonObj.get("facilities").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilities` to be an array in the JSON string but got `%s`", jsonObj.get("facilities").toString()));
      }
      // validate the optional field `instance_parameters`
      if (jsonObj.get("instance_parameters") != null && !jsonObj.get("instance_parameters").isJsonNull()) {
        SpotMarketRequestCreateInputInstanceParameters.validateJsonObject(jsonObj.getAsJsonObject("instance_parameters"));
      }
      if ((jsonObj.get("metro") != null && !jsonObj.get("metro").isJsonNull()) && !jsonObj.get("metro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metro").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpotMarketRequestCreateInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpotMarketRequestCreateInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpotMarketRequestCreateInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpotMarketRequestCreateInput.class));

       return (TypeAdapter<T>) new TypeAdapter<SpotMarketRequestCreateInput>() {
           @Override
           public void write(JsonWriter out, SpotMarketRequestCreateInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SpotMarketRequestCreateInput read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SpotMarketRequestCreateInput instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SpotMarketRequestCreateInput given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SpotMarketRequestCreateInput
  * @throws IOException if the JSON string is invalid with respect to SpotMarketRequestCreateInput
  */
  public static SpotMarketRequestCreateInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpotMarketRequestCreateInput.class);
  }

 /**
  * Convert an instance of SpotMarketRequestCreateInput to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

