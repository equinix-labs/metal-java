/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import com.equinix.openapi.metal.v1.model.DeviceActionsInner;
import com.equinix.openapi.metal.v1.model.DeviceCreatedBy;
import com.equinix.openapi.metal.v1.model.DeviceMetro;
import com.equinix.openapi.metal.v1.model.DeviceProject;
import com.equinix.openapi.metal.v1.model.DeviceProjectLite;
import com.equinix.openapi.metal.v1.model.Event;
import com.equinix.openapi.metal.v1.model.Facility;
import com.equinix.openapi.metal.v1.model.Href;
import com.equinix.openapi.metal.v1.model.IPAssignment;
import com.equinix.openapi.metal.v1.model.OperatingSystem;
import com.equinix.openapi.metal.v1.model.Plan;
import com.equinix.openapi.metal.v1.model.Port;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Device
 */
public class DeviceTest {
    private final Device model = new Device();

    /**
     * Model tests for Device
     */
    @Test
    public void testDevice() {
        // TODO: test Device
    }

    /**
     * Test the property 'alwaysPxe'
     */
    @Test
    public void alwaysPxeTest() {
        // TODO: test alwaysPxe
    }

    /**
     * Test the property 'billingCycle'
     */
    @Test
    public void billingCycleTest() {
        // TODO: test billingCycle
    }

    /**
     * Test the property 'bondingMode'
     */
    @Test
    public void bondingModeTest() {
        // TODO: test bondingMode
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'customdata'
     */
    @Test
    public void customdataTest() {
        // TODO: test customdata
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'facility'
     */
    @Test
    public void facilityTest() {
        // TODO: test facility
    }

    /**
     * Test the property 'hardwareReservation'
     */
    @Test
    public void hardwareReservationTest() {
        // TODO: test hardwareReservation
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'ipAddresses'
     */
    @Test
    public void ipAddressesTest() {
        // TODO: test ipAddresses
    }

    /**
     * Test the property 'ipxeScriptUrl'
     */
    @Test
    public void ipxeScriptUrlTest() {
        // TODO: test ipxeScriptUrl
    }

    /**
     * Test the property 'iqn'
     */
    @Test
    public void iqnTest() {
        // TODO: test iqn
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'metro'
     */
    @Test
    public void metroTest() {
        // TODO: test metro
    }

    /**
     * Test the property 'networkPorts'
     */
    @Test
    public void networkPortsTest() {
        // TODO: test networkPorts
    }

    /**
     * Test the property 'operatingSystem'
     */
    @Test
    public void operatingSystemTest() {
        // TODO: test operatingSystem
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'projectLite'
     */
    @Test
    public void projectLiteTest() {
        // TODO: test projectLite
    }

    /**
     * Test the property 'provisioningEvents'
     */
    @Test
    public void provisioningEventsTest() {
        // TODO: test provisioningEvents
    }

    /**
     * Test the property 'provisioningPercentage'
     */
    @Test
    public void provisioningPercentageTest() {
        // TODO: test provisioningPercentage
    }

    /**
     * Test the property 'rootPassword'
     */
    @Test
    public void rootPasswordTest() {
        // TODO: test rootPassword
    }

    /**
     * Test the property 'shortId'
     */
    @Test
    public void shortIdTest() {
        // TODO: test shortId
    }

    /**
     * Test the property 'spotInstance'
     */
    @Test
    public void spotInstanceTest() {
        // TODO: test spotInstance
    }

    /**
     * Test the property 'spotPriceMax'
     */
    @Test
    public void spotPriceMaxTest() {
        // TODO: test spotPriceMax
    }

    /**
     * Test the property 'sshKeys'
     */
    @Test
    public void sshKeysTest() {
        // TODO: test sshKeys
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'switchUuid'
     */
    @Test
    public void switchUuidTest() {
        // TODO: test switchUuid
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'terminationTime'
     */
    @Test
    public void terminationTimeTest() {
        // TODO: test terminationTime
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'userdata'
     */
    @Test
    public void userdataTest() {
        // TODO: test userdata
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

}
